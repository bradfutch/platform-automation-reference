resource_types:
- name: pivnet
  type: docker-image
  source:
    repository: pivotalcf/pivnet-resource
    tags: latest-final

resources:
- name: pcf-automation
  type: pivnet
  source:
    api_token: {{pivnet_token}}
    product_slug: platform-automation

- name: pcf-automation-image-fixes
  type: docker-image
  source:
    repository: cwashburn/platform-automation-fixes

- name: installation
  type: s3
  source:
    access_key_id: {{access_key}}
    bucket: state
    region_name: us-east-1
    secret_access_key: {{secret_key}}
    regexp: ((foundation))/(.*)-installation.zip
    skip_ssl_verification: true
    endpoint: {{s3_endpoint}}

- name: state
  type: s3
  source:
    access_key_id: {{access_key}}
    bucket: state
    region_name: us-east-1
    secret_access_key: {{secret_key}}
    regexp: ((foundation))/(.*)-state.yml
    skip_ssl_verification: true
    endpoint: {{s3_endpoint}}

- name: configuration
  type: git
  source:
    uri: git@github.com:calebwashburn/platform-automation-example.git
    private_key: {{git_private_key}}

jobs:
- name: install-opsman
  serial: true
  serial_groups: [ install ]
  plan:
  - aggregate:
    - get: configuration
      trigger: true
      params:
        unpack: true
    - get: pcf-automation-image
      resource: pcf-automation
      params:
        unpack: true
        globs: ["*image*"]
    - get: pcf-automation-tasks
      resource: pcf-automation
      params:
        unpack: true
        globs: ["*tasks*"]
    - get: state
    - get: pcf-automation-image-fixes
  - task: remove-timestamp
    image: pcf-automation-image
    config:
      platform: linux
      inputs:
      - name: state
      outputs:
      - name: timestamp-state
      run:
        path: /bin/bash
        args:
        - -c
        - |
          mv state/*state.yml timestamp-state/state.yml
  - task: credhub-interpolate
    image: pcf-automation-image-fixes
    file: configuration/fixes/tasks/credhub-interpolate.yml
    params:
      CREDHUB_CLIENT: ((credhub-client))
      CREDHUB_SECRET: ((credhub-secret))
      CREDHUB_SERVER: ((credhub-server))
      CREDHUB_CA_CERT: ((credhub-ca))
      PREFIX: '/((foundation))'
      INTERPOLATION_PATH: "((foundation))/config"
    input_mapping:
      files: configuration
    output_mapping:
      interpolated-files: configuration
  - task: download-opsman-image
    image: pcf-automation-image
    file: pcf-automation-tasks/tasks/download-product.yml
    input_mapping:
      config: configuration
    params:
      CONFIG_FILE: ((foundation))/config/versions/opsman.yml
  - task: create-vm
    image: pcf-automation-image
    file: pcf-automation-tasks/tasks/create-vm.yml
    input_mapping:
      image: downloaded-product
      state: timestamp-state
      config: configuration
      vars: configuaration
    params:
      STATE_FILE: state/state.yml
      OPSMAN_CONFIG_FILE: ((foundation))/config/templates/opsman.yml
      VARS_FILES: config/((foundation))/config/vars/common.yml config/((foundation))/config/vars/opsman.yml
  - task: add-timestamp
    image: pcf-automation-image
    config:
      platform: linux
      inputs:
      - name: generated-state
      outputs:
      - name: timestamp-state
      run:
        path: /bin/bash
        args:
        - -c
        - |
          ts=$(date +"%Y%m%M%S%N")
          mv generated-state/state.yml timestamp-state/${ts}-state.yml
  - put: state
    params:
      file: timestamp-state/*-state.yml
  - task: configure-authentication
    image: pcf-automation-image
    file: pcf-automation-tasks/tasks/configure-authentication.yml
    attempts: 20
    input_mapping:
      env: configuration
      config: configuration
      vars: configuaration
    params:
      ENV_FILE: ((foundation))/config/templates/env.yml
      AUTH_CONFIG_FILE: ((foundation))/config/templates/auth.yml
  - task: configure-director
    image: pcf-automation-image
    file: pcf-automation-tasks/tasks/configure-director.yml
    input_mapping:
      config: configuration
      env: configuration
      vars: configuaration
    params:
      ENV_FILE: ((foundation))/config/templates/env.yml
      DIRECTOR_CONFIG_FILE: ((foundation))/config/templates/director.yml
      VARS_FILES: config/((foundation))/config/vars/common.yml config/((foundation))/config/vars/director.yml
  - task: apply-director-changes
    image: pcf-automation-image
    file: pcf-automation-tasks/tasks/apply-director-changes.yml
    input_mapping:
      env: configuration
      vars: configuaration
    params:
      ENV_FILE: ((foundation))/config/templates/env.yml

- name: export-installation
  serial: true
  serial_groups: [ install ]
  plan:
  - aggregate:
    - get: configuration
      trigger: true
      passed: [ install-opsman ]
      params:
        unpack: true
    - get: pcf-automation-image
      resource: pcf-automation
      params:
        unpack: true
        globs: ["*image*"]
    - get: pcf-automation-tasks
      resource: pcf-automation
      params:
        unpack: true
        globs: ["*tasks*"]
    - get: pcf-automation-image-fixes
  - task: credhub-interpolate
    image: pcf-automation-image-fixes
    file: configuration/fixes/tasks/credhub-interpolate.yml
    params:
      CREDHUB_CLIENT: ((credhub-client))
      CREDHUB_SECRET: ((credhub-secret))
      CREDHUB_SERVER: ((credhub-server))
      CREDHUB_CA_CERT: ((credhub-ca))
      PREFIX: '/((foundation))'
      INTERPOLATION_PATH: "((foundation))/config"
    input_mapping:
      files: configuration
    output_mapping:
      interpolated-files: configuration
  - task: export-installation
    image: pcf-automation-image
    file: pcf-automation-tasks/tasks/export-installation.yml
    input_mapping:
      env: configuration
    params:
      ENV_FILE: ((foundation))/config/templates/env.yml
  - task: add-timestamp
    image: pcf-automation-image
    config:
      platform: linux
      inputs:
      - name: installation
      outputs:
      - name: timestamp-installation
      run:
        path: /bin/bash
        args:
        - -c
        - |
          ts=$(date +"%Y%m%M%S%N")
          mv installation/installation.zip timestamp-installation/${ts}-installation.zip
  - put: installation
    params:
      file: timestamp-installation/*-installation.zip

- name: upgrade-opsman
  serial: true
  serial_groups: [ install ]
  plan:
  - aggregate:
    - get: configuration
      trigger: true
      passed: [ export-installation ]
      params:
        unpack: true
    - get: pcf-automation-image
      resource: pcf-automation
      params:
        unpack: true
        globs: ["*image*"]
    - get: pcf-automation-tasks
      resource: pcf-automation
      params:
        unpack: true
        globs: ["*tasks*"]
    - get: installation
      passed: [ export-installation ]
    - get: state
    - get: pcf-automation-image-fixes
  - task: credhub-interpolate
    image: pcf-automation-image-fixes
    file: configuration/fixes/tasks/credhub-interpolate.yml
    params:
      CREDHUB_CLIENT: ((credhub-client))
      CREDHUB_SECRET: ((credhub-secret))
      CREDHUB_SERVER: ((credhub-server))
      CREDHUB_CA_CERT: ((credhub-ca))
      PREFIX: '/((foundation))'
      INTERPOLATION_PATH: "((foundation))/config"
    input_mapping:
      files: configuration
    output_mapping:
      interpolated-files: configuration
  - task: remove-timestamp
    image: pcf-automation-image
    config:
      platform: linux
      inputs:
      - name: state
      - name: installation
      outputs:
      - name: timestamp-state
      - name: timestamp-installation
      run:
        path: /bin/bash
        args:
        - -c
        - |
          mv state/*state.yml timestamp-state/state.yml
          mv installation/*installation.zip timestamp-installation/installation.zip
  - task: download-opsman-image
    image: pcf-automation-image
    file: pcf-automation-tasks/tasks/download-product.yml
    input_mapping:
      config: configuration
    params:
      CONFIG_FILE: ((foundation))/config/versions/opsman.yml
  - task: upgrade-opsman
    image: pcf-automation-image
    file: pcf-automation-tasks/tasks/upgrade-opsman.yml
    input_mapping:
      image: downloaded-product
      state: timestamp-state
      config: configuration
      env: configuration
      installation: timestamp-installation
      vars: configuration
    params:
      ENV_FILE: ((foundation))/config/templates/env.yml
      OPSMAN_CONFIG_FILE: ((foundation))/config/templates/opsman.yml
      VARS_FILES: config/((foundation))/config/vars/common.yml config/((foundation))/config/vars/opsman.yml
      STATE_FILE: state.yml
  - task: add-timestamp
    image: pcf-automation-image
    config:
      platform: linux
      inputs:
      - name: generated-state
      outputs:
      - name: timestamp-state
      run:
        path: /bin/bash
        args:
        - -c
        - |
          ts=$(date +"%Y%m%M%S%N")
          mv generated-state/state.yml timestamp-state/${ts}-state.yml
  - put: state
    params:
      file: timestamp-state/*-state.yml

- name: pas
  serial: true
  plan:
  - aggregate:
    - get: configuration
      trigger: true
      passed: [ upgrade-opsman ]
      params:
        unpack: true
    - get: pcf-automation-image
      resource: pcf-automation
      params:
        unpack: true
        globs: ["*image*"]
    - get: pcf-automation-tasks
      resource: pcf-automation
      params:
        unpack: true
        globs: ["*tasks*"]
    - get: pcf-automation-image-fixes

  - task: credhub-interpolate
    image: pcf-automation-image-fixes
    file: configuration/fixes/tasks/credhub-interpolate.yml
    params:
      CREDHUB_CLIENT: ((credhub-client))
      CREDHUB_SECRET: ((credhub-secret))
      CREDHUB_SERVER: ((credhub-server))
      CREDHUB_CA_CERT: ((credhub-ca))
      PREFIX: '/((foundation))'
      INTERPOLATION_PATH: "((foundation))/config"
    input_mapping:
      files: configuration
    output_mapping:
      interpolated-files: configuration
  - task: download-cf
    image: pcf-automation-image
    file: pcf-automation-tasks/tasks/download-product.yml
    input_mapping:
      config: configuration
    params:
      CONFIG_FILE: ((foundation))/config/versions/cf.yml

  - task: upload-product
    image: pcf-automation-image
    file: pcf-automation-tasks/tasks/upload-product.yml
    input_mapping:
      product: downloaded-product
      env: configuration
    params:
      ENV_FILE: ((foundation))/config/templates/env.yml

  - task: stage-product
    image: pcf-automation-image
    file: pcf-automation-tasks/tasks/stage-product.yml
    input_mapping:
      product: downloaded-product
      env: configuration
    params:
      ENV_FILE: ((foundation))/config/templates/env.yml

  - task: upload-pas-stemcell
    image: pcf-automation-image
    file: pcf-automation-tasks/tasks/upload-stemcell.yml
    input_mapping:
      env: configuration
      stemcell: downloaded-stemcell
    params:
      ENV_FILE: ((foundation))/config/templates/env.yml

  - task: assign-stemcell
    image: pcf-automation-image
    file: pcf-automation-tasks/tasks/upload-stemcell.yml
    input_mapping:
      env: configuration
      config: assign-stemcell-config
    params:
      ENV_FILE: ((foundation))/config/templates/env.yml

  - task: configure-pas
    image: pcf-automation-image
    file: pcf-automation-tasks/tasks/configure-product.yml
    input_mapping:
      config: configuration
      env: configuration
      vars: configuration
    params:
      CONFIG_FILE: ((foundation))/config/templates/cf.yml
      VARS_FILES: vars/((foundation))/config/vars/cf.yml
      ENV_FILE: ((foundation))/config/templates/env.yml

- name: apply-product-changes
  serial: true
  plan:
  - aggregate:
    - get: configuration
      trigger: true
      passed: [ pas ]
      params:
        unpack: true
    - get: pcf-automation-image
      resource: pcf-automation
      params:
        unpack: true
        globs: ["*image*"]
    - get: pcf-automation-tasks
      resource: pcf-automation
      params:
        unpack: true
        globs: ["*tasks*"]
    - get: pcf-automation-image-fixes
  - task: credhub-interpolate
    image: pcf-automation-image-fixes
    file: configuration/fixes/tasks/credhub-interpolate.yml
    params:
      CREDHUB_CLIENT: ((credhub-client))
      CREDHUB_SECRET: ((credhub-secret))
      CREDHUB_SERVER: ((credhub-server))
      CREDHUB_CA_CERT: ((credhub-ca))
      PREFIX: '/((foundation))'
      INTERPOLATION_PATH: "((foundation))/config"
    input_mapping:
      files: configuration
    output_mapping:
      interpolated-files: configuration
      
  - task: apply-product-changes
    image: pcf-automation-image
    file: pcf-automation-tasks/tasks/apply-changes.yml
    input_mapping:
      env: configuration
    params:
      ENV_FILE: ((foundation))/config/templates/env.yml
