resource_types:
- name: pivnet
  type: docker-image
  source:
    repository: pivotalcf/pivnet-resource
    tags: latest-final

resources:
- name: platform-automation
  type: pivnet
  source:
    api_token: {{pivnet_token}}
    product_slug: platform-automation

- name: installation
  type: s3
  source:
    access_key_id: {{access_key}}
    bucket: state
    region_name: us-east-1
    secret_access_key: {{secret_key}}
    regexp: ((foundation))/installation-(.*).zip
    skip_ssl_verification: true
    endpoint: {{s3_endpoint}}

- name: configuration
  type: git
  source:
    uri: git@github.com:calebwashburn/platform-automation-reference.git
    private_key: {{git_private_key}}
    paths: ["proposed-tasks","environments/((foundation))/config"]
    branch: master

- name: state
  type: git
  source:
    uri: git@github.com:calebwashburn/platform-automation-reference.git
    private_key: {{git_private_key}}
    branch: master

jobs:
- name: install-opsman
  serial: true
  serial_groups: [ install ]
  plan:
  - aggregate:
    - get: configuration
      trigger: true
    - get: state
    - get: platform-automation-image
      resource: platform-automation
      params:
        unpack: true
        globs: ["*image*"]
    - get: platform-automation-tasks
      resource: platform-automation
      params:
        unpack: true
        globs: ["*tasks*"]
  - task: credhub-interpolate
    image: platform-automation-image
    file: platform-automation-tasks/tasks/credhub-interpolate.yml
    params: &credhub_interpolate_params
      CREDHUB_CLIENT: ((credhub-client))
      CREDHUB_SECRET: ((credhub-secret))
      CREDHUB_SERVER: ((credhub-server))
      CREDHUB_CA_CERT: ((credhub-ca))
      PREFIX: '/((foundation))'
      INTERPOLATION_PATH: "environments/((foundation))/config/secrets"
    input_mapping:
      files: configuration

  - task: download-create-opsman
    image: platform-automation-image
    file: configuration/proposed-tasks/download-create-opsman.yml
    input_mapping:
      download-config: interpolated-files
      state: state
      config: configuration
      vars: configuration
      secrets: interpolated-files
    params:
      DOWNLOAD_CONFIG_FILE: environments/((foundation))/config/secrets/versions/opsman.yml
      STATE_FILE: state/((foundation))/state.yml
      OPSMAN_CONFIG_FILE: environments/((foundation))/config/templates/opsman.yml
      VARS_FILES: vars/environments/((foundation))/config/vars/opsman.yml secrets/environments/((foundation))/config/secrets/templates/opsman.yml
    ensure: &make-state-commit
      do:
        - task: make-commit
          image: platform-automation-image
          file: configuration/proposed-tasks/make-commit.yml
          input_mapping:
            repository: state
            file-source: generated-state
          output_mapping:
            repository-commit: state-commit
          params:
            FILE_SOURCE_PATH: state.yml
            FILE_DESTINATION_PATH: state/((foundation))/state.yml
            GIT_AUTHOR_EMAIL: "cwashburn@pivotal.io"
            GIT_AUTHOR_NAME: "Platform Automation"
            COMMIT_MESSAGE: 'Update state file'
        - put: state
          params:
            repository: state-commit
            merge: true

  - task: configure-authentication
    image: platform-automation-image
    file: platform-automation-tasks/tasks/configure-authentication.yml
    attempts: 20
    input_mapping:
      env: interpolated-files
      config: interpolated-files
    params:
      ENV_FILE: environments/((foundation))/config/secrets/templates/env.yml
      AUTH_CONFIG_FILE: environments/((foundation))/config/secrets/templates/auth.yml
  - task: configure-director
    image: platform-automation-image
    file: platform-automation-tasks/tasks/configure-director.yml
    input_mapping:
      config: configuration
      env: interpolated-files
      vars: configuration
      secrets: interpolated-files
    params:
      ENV_FILE: environments/((foundation))/config/secrets/templates/env.yml
      DIRECTOR_CONFIG_FILE: environments/((foundation))/config/templates/director.yml
      VARS_FILES: vars/environments/((foundation))/config/vars/director.yml secrets/environments/((foundation))/config/secrets/templates/director.yml
  - task: apply-director-changes
    image: platform-automation-image
    file: platform-automation-tasks/tasks/apply-director-changes.yml
    input_mapping:
      env: interpolated-files
    params:
      ENV_FILE: environments/((foundation))/config/secrets/templates/env.yml

- name: export-installation
  serial: true
  serial_groups: [ install ]
  plan:
  - aggregate:
    - get: configuration
      trigger: true
      passed: [ install-opsman ]
    - get: platform-automation-image
      resource: platform-automation
      params:
        unpack: true
        globs: ["*image*"]
    - get: platform-automation-tasks
      resource: platform-automation
      params:
        unpack: true
        globs: ["*tasks*"]
  - task: credhub-interpolate
    image: platform-automation-image
    file: platform-automation-tasks/tasks/credhub-interpolate.yml
    params: *credhub_interpolate_params
    input_mapping:
      files: configuration
  - task: export-installation
    image: platform-automation-image
    file: platform-automation-tasks/tasks/export-installation.yml
    input_mapping:
      env: interpolated-files
    params:
      ENV_FILE: environments/((foundation))/config/secrets/templates/env.yml
  - put: installation
    params:
      file: installation/installation-*.zip

- name: upgrade-opsman
  serial: true
  serial_groups: [ install ]
  plan:
  - aggregate:
    - get: configuration
      trigger: true
      passed: [ export-installation ]
    - get: state
    - get: platform-automation-image
      resource: platform-automation
      params:
        unpack: true
        globs: ["*image*"]
    - get: platform-automation-tasks
      resource: platform-automation
      params:
        unpack: true
        globs: ["*tasks*"]
    - get: installation
      passed: [ export-installation ]
  - task: credhub-interpolate
    image: platform-automation-image
    file: platform-automation-tasks/tasks/credhub-interpolate.yml
    params: *credhub_interpolate_params
    input_mapping:
      files: configuration
  - task: download-opsman-image
    image: platform-automation-image
    file: configuration/proposed-tasks/download-upgrade-opsman.yml
    input_mapping:
      download-config: interpolated-files
      state: state
      config: configuration
      vars: configuration
      secrets: interpolated-files
      installation: installation
      env: interpolated-files
    params:
      DOWNLOAD_CONFIG_FILE: environments/((foundation))/config/secrets/versions/opsman.yml
      STATE_FILE: state/((foundation))/state.yml
      OPSMAN_CONFIG_FILE: environments/((foundation))/config/templates/opsman.yml
      VARS_FILES: vars/environments/((foundation))/config/vars/opsman.yml secrets/environments/((foundation))/config/secrets/templates/opsman.yml
      ENV_FILE: environments/((foundation))/config/secrets/templates/env.yml
    ensure: *make-state-commit

- name: pas
  serial: true
  plan:
  - aggregate:
    - get: configuration
      trigger: true
      passed: [ upgrade-opsman ]
    - get: platform-automation-image
      resource: platform-automation
      params:
        unpack: true
        globs: ["*image*"]
    - get: platform-automation-tasks
      resource: platform-automation
      params:
        unpack: true
        globs: ["*tasks*"]

  - task: credhub-interpolate
    image: platform-automation-image
    file: platform-automation-tasks/tasks/credhub-interpolate.yml
    params: *credhub_interpolate_params
    input_mapping:
      files: configuration

  - task: download-stage-tile-stemcell
    image: platform-automation-image
    file: configuration/proposed-tasks/download-stage-tile-stemcell.yml
    input_mapping:
      config: configuration
      download-config: interpolated-files
      env: interpolated-files
    params:
      DOWNLOAD_CONFIG_FILE: environments/((foundation))/config/secrets/versions/cf.yml
      DOWNLOAD_STEMCELL_CONFIG_FILE: environments/((foundation))/config/secrets/versions/cf-stemcell.yml
      CONFIG_FILE: environments/((foundation))/config/templates/cf.yml
      ENV_FILE: environments/((foundation))/config/secrets/templates/env.yml

  - task: configure
    image: platform-automation-image
    file: platform-automation-tasks/tasks/configure-product.yml
    input_mapping:
      config: configuration
      env: interpolated-files
      vars: configuration
      secrets: interpolated-files
    params:
      CONFIG_FILE: environments/((foundation))/config/templates/cf.yml
      VARS_FILES: vars/environments/((foundation))/config/defaults/cf.yml vars/environments/((foundation))/config/vars/cf.yml secrets/environments/((foundation))/config/secrets/templates/cf.yml
      ENV_FILE: environments/((foundation))/config/secrets/templates/env.yml

  - task: apply-product-changes
    image: platform-automation-image
    file: configuration/proposed-tasks/apply-product-changes.yml
    input_mapping:
      config: configuration
      env: interpolated-files
    params:
      CONFIG_FILE: environments/((foundation))/config/templates/cf.yml
      ENV_FILE: environments/((foundation))/config/secrets/templates/env.yml
